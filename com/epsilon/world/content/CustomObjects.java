package com.epsilon.world.content;

import java.util.concurrent.CopyOnWriteArrayList;

import com.epsilon.engine.task.Task;
import com.epsilon.engine.task.TaskManager;
import com.epsilon.model.GameObject;
import com.epsilon.model.GroundItem;
import com.epsilon.model.Item;
import com.epsilon.model.Position;
import com.epsilon.world.World;
import com.epsilon.world.clip.region.RegionClipping;
import com.epsilon.world.entity.impl.GroundItemManager;
import com.epsilon.world.entity.impl.player.Player;

/**
 * Handles customly spawned objects (mostly global but also privately for players)
 * @author Gabriel Hannason
 */
public class CustomObjects {
	
	private static final int DISTANCE_SPAWN = 70; //Spawn if within 70 squares of distance
	private static final CopyOnWriteArrayList<GameObject> CUSTOM_OBJECTS = new CopyOnWriteArrayList<GameObject>();

	public static void init() {
		for(int i = 0; i < CLIENT_OBJECTS.length; i++) {
			int id = CLIENT_OBJECTS[i][0];
			int x = CLIENT_OBJECTS[i][1];
			int y = CLIENT_OBJECTS[i][2];
			int z = CLIENT_OBJECTS[i][3];
			int face = CLIENT_OBJECTS[i][4];
			GameObject object = new GameObject(id, new Position(x, y, z));
			object.setFace(face);
			RegionClipping.addObject(object);
		}
		for(int i = 0; i < CUSTOM_OBJECTS_SPAWNS.length; i++) {
			int id = CUSTOM_OBJECTS_SPAWNS[i][0];
			int x = CUSTOM_OBJECTS_SPAWNS[i][1];
			int y = CUSTOM_OBJECTS_SPAWNS[i][2];
			int z = CUSTOM_OBJECTS_SPAWNS[i][3];
			int face = CUSTOM_OBJECTS_SPAWNS[i][4];
			GameObject object = new GameObject(id, new Position(x, y, z));
			object.setFace(face);
			CUSTOM_OBJECTS.add(object);
			World.register(object);
		}
	}
	
	private static void handleList(GameObject object, String handleType) {
		switch(handleType.toUpperCase()) {
		case "DELETE":
			for(GameObject objects : CUSTOM_OBJECTS) {
				if(objects.getId() == object.getId() && object.getPosition().equals(objects.getPosition())) {
					CUSTOM_OBJECTS.remove(objects);
				}
			}
			break;
		case "ADD":
			if(!CUSTOM_OBJECTS.contains(object)) {
				CUSTOM_OBJECTS.add(object);
			}
			break;
		case "EMPTY":
			CUSTOM_OBJECTS.clear();
			break;
		}
	}

	public static void spawnObject(Player p, GameObject object) {
		if(object.getId() != -1) {
			p.getPacketSender().sendObject(object);
			if(!RegionClipping.objectExists(object)) {
				RegionClipping.addObject(object);
			}
		} else {
			deleteObject(p, object);
		}
	}
	
	public static void deleteObject(Player p, GameObject object) {
		p.getPacketSender().sendObjectRemoval(object);
		if(RegionClipping.objectExists(object)) {
			RegionClipping.removeObject(object);
		}
	}
	
	public static void deleteGlobalObject(GameObject object) {
		handleList(object, "delete");
		World.deregister(object);
	}

	public static void spawnGlobalObject(GameObject object) {
		handleList(object, "add");
		World.register(object);
	}
	
	public static void spawnGlobalObjectWithinDistance(GameObject object) {
		for(Player player : World.getPlayers()) {
			if(player == null)
				continue;
			if(object.getPosition().isWithinDistance(player.getPosition(), DISTANCE_SPAWN)) {
				spawnObject(player, object);
			}
		}
	}
	
	public static void deleteGlobalObjectWithinDistance(GameObject object) {
		for(Player player : World.getPlayers()) {
			if(player == null)
				continue;
			if(object.getPosition().isWithinDistance(player.getPosition(), DISTANCE_SPAWN)) {
				deleteObject(player, object);
			}
		}
	}
	
	public static boolean objectExists(Position pos) {
		return getGameObject(pos) != null;
	}

	public static GameObject getGameObject(Position pos) {
		for(GameObject objects : CUSTOM_OBJECTS) {
			if(objects != null && objects.getPosition().equals(pos)) {
				return objects;
			}
		}
		return null;
	}

	public static void handleRegionChange(Player p) {
		for(GameObject object: CUSTOM_OBJECTS) {
			if(object == null)
				continue;
			if(object.getPosition().isWithinDistance(p.getPosition(), DISTANCE_SPAWN)) {
				spawnObject(p, object);
			}
		}
	}
	
	public static void objectRespawnTask(Player p, final GameObject tempObject, final GameObject mainObject, final int cycles) {
		deleteObject(p, mainObject);
		spawnObject(p, tempObject);
		TaskManager.submit(new Task(cycles) {
			@Override
			public void execute() {
				deleteObject(p, tempObject);
				spawnObject(p, mainObject);
				this.stop();
			}
		});
	}
	
	public static void globalObjectRespawnTask(final GameObject tempObject, final GameObject mainObject, final int cycles) {
		deleteGlobalObject(mainObject);
		spawnGlobalObject(tempObject);
		TaskManager.submit(new Task(cycles) {
			@Override
			public void execute() {
				deleteGlobalObject(tempObject);
				spawnGlobalObject(mainObject);
				this.stop();
			}
		});
	}

	public static void globalObjectRemovalTask(final GameObject object, final int cycles) {
		spawnGlobalObject(object);
		TaskManager.submit(new Task(cycles) {
			@Override
			public void execute() {
				deleteGlobalObject(object);
				this.stop();
			}
		});
	}

	public static void globalFiremakingTask(final GameObject fire, final Player player, final int cycles) {
		spawnGlobalObject(fire);
		TaskManager.submit(new Task(cycles) {
			@Override
			public void execute() {
				deleteGlobalObject(fire);
				if(player.getInteractingObject() != null && player.getInteractingObject().getId() == 2732) {
					player.setInteractingObject(null);
				}
				this.stop();
			}
			@Override
			public void stop() {
				setEventRunning(false);
				GroundItemManager.spawnGroundItem(player, new GroundItem(new Item(592), fire.getPosition(), player.getUsername(), false, 150, true, 100));
			}
		});
	}
	
	/**
	 * Contains
	 * @param ObjectId - The object ID to spawn
	 * @param absX - The X position of the object to spawn
	 * @param absY - The Y position of the object to spawn
	 * @param Z - The Z position of the object to spawn
	 * @param face - The position the object will face
	 */
	
	//Only adds clips to these objects, they are spawned clientsided
	//NOTE: You must add to the client's customobjects array to make them spawn, this is just clipping!
	private static final int[][] CLIENT_OBJECTS = {
		{401, 3503, 3567, 0, 0},
		{401, 3504, 3567, 0, 0},
		{1309, 2715, 3465, 0, 0},
		{1309, 2709, 3465, 0, 0},
		{1309, 2709, 3458, 0, 0},
		{1306, 2705, 3465, 0, 0},
		{1306, 2705, 3458, 0, 0},
		{-1, 2715, 3466, 0, 0},
		{-1, 2712, 3466, 0, 0},
		{-1, 2713, 3464, 0, 0},
		{-1, 2711, 3467, 0, 0},
		{-1, 2710, 3465, 0, 0},
		{-1, 2709, 3464, 0, 0},
		{-1, 2708, 3466, 0, 0},
		{-1, 2707, 3467, 0, 0},
		{-1, 2704, 3465, 0, 0},
		{-1, 2714, 3466, 0, 0},
		{-1, 2705, 3457, 0, 0},
		{-1, 2709, 3461, 0, 0},
		{-1, 2709, 3459, 0, 0},
		{-1, 2708, 3458, 0, 0},
		{-1, 2710, 3457, 0, 0},
		{-1, 2711, 3461, 0, 0},
		{-1, 2713, 3461, 0, 0},
		{-1, 2712, 3459, 0, 0},
		{-1, 2712, 3457, 0, 0},
		{-1, 2714, 3458, 0, 0},
		{-1, 2705, 3459, 0, 0},
		{-1, 2705, 3464, 0, 0},
		{2274, 2912, 5300, 2, 0},
		{2274, 2914, 5300, 1, 0},
		{2274, 2919, 5276, 1, 0},
		{2274, 2918, 5274, 0, 0},
		{-1, 2884, 9797, 0, 2},
		{4483, 2909, 4832, 0, 3},
		{4483, 2901, 5201, 0, 2},
		{4483, 2902, 5201, 0, 2},
		{9326, 3001, 3960, 0, 0},
		{1662, 3112, 9677, 0, 2},
		{1661, 3114, 9677, 0, 2},
		{1661, 3122, 9664, 0, 1},
		{1662, 3123, 9664, 0, 2},
		{1661, 3124, 9664, 0, 3},
		{4483, 2918, 2885, 0, 3},
		{12356, 3081, 3500, 0, 0},
		{2182, 3081, 3497, 0, 0},
		{2644, 2737, 3444, 0, 0},
		{-1, 2608, 4777, 0, 0},
		{-1, 2601, 4774, 0, 0},
		{-1, 2611, 4776, 0, 0},
		/**New Member Zone*/
		{2344, 3421, 2908, 0, 0}, //Rock blocking
        {2345, 3438, 2909, 0, 0},
        {2344, 3435, 2909, 0, 0},
        {2344, 3432, 2909, 0, 0},
        {2345, 3431, 2909, 0, 0},
        {2344, 3428, 2921, 0, 1},
        {2344, 3428, 2918, 0, 1},
        {2344, 3428, 2915, 0, 1},
        {2344, 3428, 2912, 0, 1},
        {2345, 3428, 2911, 0, 1},
        {2344, 3417, 2913, 0, 1},
        {2344, 3417, 2916, 0, 1},
        {2344, 3417, 2919, 0, 1},
        {2344, 3417, 2922, 0, 1},
        {2345, 3417, 2912, 0, 0},
        {2346, 3418, 2925, 0, 0},
        {10378, 3426, 2907, 0, 0},
        {8749, 3426, 2923, 0, 2}, //Altar
        {-1, 3420, 2909, 0, 10}, //Remove crate by mining
        {-1, 3420, 2923, 0, 10}, //Remove Rockslide by Woodcutting
        {14859, 3421, 2909, 0, 0}, //Mining
        {14859, 3419, 2909, 0, 0},
        {14859, 3418, 2910, 0, 0},
        {14859, 3418, 2911, 0, 0},
        {14859, 3422, 2909, 0, 0},
        {1306, 3418, 2921, 0, 0}, //Woodcutting
        {1306, 3421, 2924, 0, 0},
        {1306, 3420, 2924, 0, 0},
        {1306, 3419, 2923, 0, 0},
        {1306, 3418, 2922, 0, 0},
		{-1, 3430, 2912, 0, 2}, 
		{13493, 3424, 2916, 0, 1},//Armour  stall
        /**New Member Zone end*/
		{-1, 3098, 3496, 0, 1},
		{-1, 3095, 3498, 0, 1},
		{-1, 3088, 3509, 0, 1},
		{-1, 3095, 3499, 0, 1},
		{-1, 3085, 3506, 0, 1},
		{-1, 3206, 3263, 0, 0},
		{-1, 2794, 2773, 0, 0},
		{2, 2692, 3712, 0, 3},
		{2, 2688, 3712, 0, 1},
		{4483, 3081, 3496, 0, 1},
		{4483, 3081, 3495, 0, 1},
		{409, 3084, 3495, 0, 1},
		{411, 3084, 3493, 0, 1},
		{6552, 3084, 3489, 0, 1},
		{410, 3084, 3487, 0, 2},
		{4875, 3094, 3507, 0, 0},
		{4874, 3095, 3507, 0, 0},
		{4876, 3096, 3507, 0, 0},
		{4877, 3097, 3507, 0, 0},
		{4878, 3098, 3507, 0, 0},
		{ 11758, 3019, 9740, 0, 0},
		{ 11758, 3020, 9739, 0, 1},
		{ 11758, 3019, 9738, 0, 2},
		{ 11758, 3018, 9739, 0, 3},
		{ 11933, 3028, 9739, 0, 1},
		{ 11933, 3032, 9737, 0, 2},
		{ 11933, 3032, 9735, 0, 0},
		{ 11933, 3035, 9742, 0, 3},
		{ 11933, 3034, 9739, 0, 0},
		{ 11936, 3028, 9737, 0, 1},
		{ 11936, 3029, 9734, 0, 2},
		{ 11936, 3031, 9739, 0, 0},
		{ 11936, 3032, 9741, 0, 3},
		{ 11936, 3035, 9734, 0, 0},
		{ 11954, 3037, 9739, 0, 1},
		{ 11954, 3037, 9735, 0, 2},
		{ 11954, 3037, 9733, 0, 0},
		{ 11954, 3039, 9741, 0, 3},
		{ 11954, 3039, 9738, 0, 0},
		{ 11963, 3039, 9733, 0, 1},
		{ 11964, 3040, 9732, 0, 2},
		{ 11965, 3042, 9734, 0, 0},
		{ 11965, 3044, 9737, 0, 3},
		{ 11963, 3042, 9739, 0, 0},
		{ 11963, 3045, 9740, 0, 1},
		{ 11965, 3043, 9742, 0, 2},
		{ 11964, 3045, 9744, 0, 0},
		{ 11965, 3048, 9747, 0, 3},
		{ 11951, 3048, 9743, 0, 0},
		{ 11951, 3049, 9740, 0, 1},
		{ 11951, 3047, 9737, 0, 2},
		{ 11951, 3050, 9738, 0, 0},
		{ 11951, 3052, 9739, 0, 3},
		{ 11951, 3051, 9735, 0, 0},
		{ 11947, 3049, 9735, 0, 1},
		{ 11947, 3049, 9734, 0, 2},
		{ 11947, 3047, 9733, 0, 0},
		{ 11947, 3046, 9733, 0, 3},
		{ 11947, 3046, 9735, 0, 0},
		{ 11941, 3053, 9737, 0, 1},
		{ 11939, 3054, 9739, 0, 2},
		{ 11941, 3053, 9742, 0, 0},
		{ 14859, 3038, 9748, 0, 3},
		{ 14859, 3044, 9753, 0, 0},
		{ 14859, 3048, 9754, 0, 1},
		{ 14859, 3054, 9746, 0, 2},
		{ 4306, 3026, 9741, 0, 0},
		{ 6189, 3022, 9742, 0, 1},
		{ 172 , 3077, 3497, 0, 0},
		{ 75 , 2914, 3452, 0, 2},
		{ 11758, 3449, 3722, 0, 0},
		{ 11758, 3450, 3722, 0, 0},
		{ 50547, 3445, 3717, 0, 3},
		{2465, 3085, 3512, 0, 0},
		{ -1, 3090, 3496, 0, 0},
		{ -1, 3090, 3494, 0, 0},
		{ -1, 3092, 3496, 0, 0},
		{ -1, 3659, 3508, 0, 0},
		{ 4053, 3660, 3508, 0, 0},
		{ 4051, 3659, 3508, 0, 0},
		{ 1, 3649, 3506, 0, 0},
		{ 1, 3650, 3506, 0, 0},
		{ 1, 3651, 3506, 0, 0},
		{ 1, 3652, 3506, 0, 0},
		{ 8702, 3423, 2911, 0, 0},
		{ 47180, 3422, 2918, 0, 0}, 
		{ 11356, 3418, 2917, 0, 1},
		{ -1, 2860, 9734, 0, 1},
		{ -1, 2857, 9736, 0, 1},
		{ 664, 2859, 9742, 0, 1},
		{ 1167, 2860, 9742, 0, 1},
		{ 5277, 3691, 3465, 0, 2},
		{ 5277, 3690, 3465, 0, 2},
		{ 5277, 3688, 3465, 0, 2},
		{ 5277, 3687, 3465, 0, 2},
		{ 114, 3093, 3933, 0, 0},
		 /**Fishing (Fish Guild*/
		  {-1, 2609, 3408, 0, 0}, //Deleted Row Boat
		  {-1, 2599, 3426, 0, 0}, //Deleted Row Boat
		  {-1, 2594, 3423, 0, 0}, //Deleted Barrel
		  {-1, 2594, 3422, 0, 0}, //Deleted Barrel
		  {2031, 2612, 3415, 0, 0}, //BigNet|Harpoon
		  {2031, 2605, 3421, 0, 0}, //BigNet|Harpoon
		  {2030, 2607, 3410, 0, 0}, //Cage|Harpoon
		  {2030, 2604, 3419, 0, 0}, //Cage|Harpoon
		  {2028, 2602, 3419, 0, 0}, //Net|Bait
		  {2028, 2604, 3423, 0, 0}, //Net|Bait
		  {2029, 2602, 3423, 0, 0}, //BigNet2
		  {2029, 2609, 3410, 0, 0}, //BigNet2
		  {2026, 2599, 3419, 0, 0}, //Monk Fish
		  {2026, 2611, 3410, 0, 0}, //Monk Fish	
		  {4306, 3021, 9736, 0, 1},
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  {-1, 2333, 3694, 0, 0},
			{-1, 2333, 3693, 0, 0},
			{-1, 2333, 3692, 0, 0},
			{-1, 2333, 3691, 0, 0},
			{-1, 2333, 3690, 0, 0},
			{-1, 2333, 3689, 0, 0},
			{-1, 2333, 3688, 0, 0},
			{-1, 2333, 3687, 0, 0},
			{-1, 2333, 3686, 0, 0},
			{-1, 2333, 3685, 0, 0},
			{-1, 2333, 3684, 0, 0},
			{-1, 2333, 3683, 0, 0},
			{-1, 2333, 3682, 0, 0},
			{-1, 2333, 3681, 0, 0},
			{-1, 2333, 3680, 0, 0},
			{-1, 2333, 3679, 0, 0},
			{-1, 2334, 3694, 0, 0},
			{-1, 2334, 3693, 0, 0},
			{-1, 2334, 3692, 0, 0},
			{-1, 2334, 3691, 0, 0},
			{-1, 2334, 3690, 0, 0},
			{-1, 2334, 3689, 0, 0},
			{-1, 2334, 3688, 0, 0},
			{-1, 2334, 3687, 0, 0},
			{-1, 2334, 3686, 0, 0},
			{-1, 2334, 3685, 0, 0},
			{-1, 2334, 3684, 0, 0},
			{-1, 2334, 3683, 0, 0},
			{-1, 2334, 3682, 0, 0},
			{-1, 2334, 3681, 0, 0},
			{-1, 2334, 3680, 0, 0},
			{-1, 2334, 3679, 0, 0},
			{-1, 2335, 3694, 0, 0},
			{-1, 2335, 3693, 0, 0},
			{-1, 2335, 3692, 0, 0},
			{-1, 2335, 3691, 0, 0},
			{-1, 2335, 3690, 0, 0},
			{-1, 2335, 3689, 0, 0},
			{-1, 2335, 3688, 0, 0},
			{-1, 2335, 3687, 0, 0},
			{-1, 2335, 3686, 0, 0},
			{-1, 2335, 3685, 0, 0},
			{-1, 2335, 3684, 0, 0},
			{-1, 2335, 3683, 0, 0},
			{-1, 2335, 3682, 0, 0},
			{-1, 2335, 3681, 0, 0},
			{-1, 2335, 3680, 0, 0},
			{-1, 2335, 3679, 0, 0},
			{-1, 2336, 3694, 0, 0},
			{-1, 2336, 3693, 0, 0},
			{-1, 2336, 3692, 0, 0},
			{-1, 2336, 3691, 0, 0},
			{-1, 2336, 3690, 0, 0},
			{-1, 2336, 3689, 0, 0},
			{-1, 2336, 3688, 0, 0},
			{-1, 2336, 3687, 0, 0},
			{-1, 2336, 3686, 0, 0},
			{-1, 2336, 3685, 0, 0},
			{-1, 2336, 3684, 0, 0},
			{-1, 2336, 3683, 0, 0},
			{-1, 2336, 3682, 0, 0},
			{-1, 2336, 3681, 0, 0},
			{-1, 2336, 3680, 0, 0},
			{-1, 2336, 3679, 0, 0},
			{-1, 2337, 3694, 0, 0},
			{-1, 2337, 3693, 0, 0},
			{-1, 2337, 3692, 0, 0},
			{-1, 2337, 3691, 0, 0},
			{-1, 2337, 3690, 0, 0},
			{-1, 2337, 3689, 0, 0},
			{-1, 2337, 3688, 0, 0},
			{-1, 2337, 3687, 0, 0},
			{-1, 2337, 3686, 0, 0},
			{-1, 2337, 3685, 0, 0},
			{-1, 2337, 3684, 0, 0},
			{-1, 2337, 3683, 0, 0},
			{-1, 2337, 3682, 0, 0},
			{-1, 2337, 3681, 0, 0},
			{-1, 2337, 3680, 0, 0},
			{-1, 2337, 3679, 0, 0},
			{-1, 2338, 3694, 0, 0},
			{-1, 2338, 3693, 0, 0},
			{-1, 2338, 3692, 0, 0},
			{-1, 2338, 3691, 0, 0},
			{-1, 2338, 3690, 0, 0},
			{-1, 2338, 3689, 0, 0},
			{-1, 2338, 3688, 0, 0},
			{-1, 2338, 3687, 0, 0},
			{-1, 2338, 3686, 0, 0},
			{-1, 2338, 3685, 0, 0},
			{-1, 2338, 3684, 0, 0},
			{-1, 2338, 3683, 0, 0},
			{-1, 2338, 3682, 0, 0},
			{-1, 2338, 3681, 0, 0},
			{-1, 2338, 3680, 0, 0},
			{-1, 2338, 3679, 0, 0},
			{-1, 2339, 3694, 0, 0},
			{-1, 2339, 3693, 0, 0},
			{-1, 2339, 3692, 0, 0},
			{-1, 2339, 3691, 0, 0},
			{-1, 2339, 3690, 0, 0},
			{-1, 2339, 3689, 0, 0},
			{-1, 2339, 3688, 0, 0},
			{-1, 2339, 3687, 0, 0},
			{-1, 2339, 3686, 0, 0},
			{-1, 2339, 3685, 0, 0},
			{-1, 2339, 3684, 0, 0},
			{-1, 2339, 3683, 0, 0},
			{-1, 2339, 3682, 0, 0},
			{-1, 2339, 3681, 0, 0},
			{-1, 2339, 3680, 0, 0},
			{-1, 2339, 3679, 0, 0},
			{-1, 2340, 3694, 0, 0},
			{-1, 2340, 3693, 0, 0},
			{-1, 2340, 3692, 0, 0},
			{-1, 2340, 3691, 0, 0},
			{-1, 2340, 3690, 0, 0},
			{-1, 2340, 3689, 0, 0},
			{-1, 2340, 3688, 0, 0},
			{-1, 2340, 3687, 0, 0},
			{-1, 2340, 3686, 0, 0},
			{-1, 2340, 3685, 0, 0},
			{-1, 2340, 3684, 0, 0},
			{-1, 2340, 3683, 0, 0},
			{-1, 2340, 3682, 0, 0},
			{-1, 2340, 3681, 0, 0},
			{-1, 2340, 3680, 0, 0},
			{-1, 2340, 3679, 0, 0},
			{-1, 2341, 3694, 0, 0},
			{-1, 2341, 3693, 0, 0},
			{-1, 2341, 3692, 0, 0},
			{-1, 2341, 3691, 0, 0},
			{-1, 2341, 3690, 0, 0},
			{-1, 2341, 3689, 0, 0},
			{-1, 2341, 3688, 0, 0},
			{-1, 2341, 3687, 0, 0},
			{-1, 2341, 3686, 0, 0},
			{-1, 2341, 3685, 0, 0},
			{-1, 2341, 3684, 0, 0},
			{-1, 2341, 3683, 0, 0},
			{-1, 2341, 3682, 0, 0},
			{-1, 2341, 3681, 0, 0},
			{-1, 2341, 3680, 0, 0},
			{-1, 2341, 3679, 0, 0},
			{-1, 2342, 3694, 0, 0},
			{-1, 2342, 3693, 0, 0},
			{-1, 2342, 3692, 0, 0},
			{-1, 2342, 3691, 0, 0},
			{-1, 2342, 3690, 0, 0},
			{-1, 2342, 3689, 0, 0},
			{-1, 2342, 3688, 0, 0},
			{-1, 2342, 3687, 0, 0},
			{-1, 2342, 3686, 0, 0},
			{-1, 2342, 3685, 0, 0},
			{-1, 2342, 3684, 0, 0},
			{-1, 2342, 3683, 0, 0},
			{-1, 2342, 3682, 0, 0},
			{-1, 2342, 3681, 0, 0},
			{-1, 2342, 3680, 0, 0},
			{-1, 2342, 3679, 0, 0},
			{-1, 2343, 3694, 0, 0},
			{-1, 2343, 3693, 0, 0},
			{-1, 2343, 3692, 0, 0},
			{-1, 2343, 3691, 0, 0},
			{-1, 2343, 3690, 0, 0},
			{-1, 2343, 3689, 0, 0},
			{-1, 2343, 3688, 0, 0},
			{-1, 2343, 3687, 0, 0},
			{-1, 2343, 3686, 0, 0},
			{-1, 2343, 3685, 0, 0},
			{-1, 2343, 3684, 0, 0},
			{-1, 2343, 3683, 0, 0},
			{-1, 2343, 3682, 0, 0},
			{-1, 2343, 3681, 0, 0},
			{-1, 2343, 3680, 0, 0},
			{-1, 2343, 3679, 0, 0},
			{-1, 2344, 3694, 0, 0},
			{-1, 2344, 3693, 0, 0},
			{-1, 2344, 3692, 0, 0},
			{-1, 2344, 3691, 0, 0},
			{-1, 2344, 3690, 0, 0},
			{-1, 2344, 3689, 0, 0},
			{-1, 2344, 3688, 0, 0},
			{-1, 2344, 3687, 0, 0},
			{-1, 2344, 3686, 0, 0},
			{-1, 2344, 3685, 0, 0},
			{-1, 2344, 3684, 0, 0},
			{-1, 2344, 3683, 0, 0},
			{-1, 2344, 3682, 0, 0},
			{-1, 2344, 3681, 0, 0},
			{-1, 2344, 3680, 0, 0},
			{-1, 2344, 3679, 0, 0},
			{-1, 2345, 3694, 0, 0},
			{-1, 2345, 3693, 0, 0},
			{-1, 2345, 3692, 0, 0},
			{-1, 2345, 3691, 0, 0},
			{-1, 2345, 3690, 0, 0},
			{-1, 2345, 3689, 0, 0},
			{-1, 2345, 3688, 0, 0},
			{-1, 2345, 3687, 0, 0},
			{-1, 2345, 3686, 0, 0},
			{-1, 2345, 3685, 0, 0},
			{-1, 2345, 3684, 0, 0},
			{-1, 2345, 3683, 0, 0},
			{-1, 2345, 3682, 0, 0},
			{-1, 2345, 3681, 0, 0},
			{-1, 2345, 3680, 0, 0},
			{-1, 2345, 3679, 0, 0},
			{-1, 2346, 3694, 0, 0},
			{-1, 2346, 3693, 0, 0},
			{-1, 2346, 3692, 0, 0},
			{-1, 2346, 3691, 0, 0},
			{-1, 2346, 3690, 0, 0},
			{-1, 2346, 3689, 0, 0},
			{-1, 2346, 3688, 0, 0},
			{-1, 2346, 3687, 0, 0},
			{-1, 2346, 3686, 0, 0},
			{-1, 2346, 3685, 0, 0},
			{-1, 2346, 3684, 0, 0},
			{-1, 2346, 3683, 0, 0},
			{-1, 2346, 3682, 0, 0},
			{-1, 2346, 3681, 0, 0},
			{-1, 2346, 3680, 0, 0},
			{-1, 2346, 3679, 0, 0},
			{-1, 2347, 3694, 0, 0},
			{-1, 2347, 3693, 0, 0},
			{-1, 2347, 3692, 0, 0},
			{-1, 2347, 3691, 0, 0},
			{-1, 2347, 3690, 0, 0},
			{-1, 2347, 3689, 0, 0},
			{-1, 2347, 3688, 0, 0},
			{-1, 2347, 3687, 0, 0},
			{-1, 2347, 3686, 0, 0},
			{-1, 2347, 3685, 0, 0},
			{-1, 2347, 3684, 0, 0},
			{-1, 2347, 3683, 0, 0},
			{-1, 2347, 3682, 0, 0},
			{-1, 2347, 3681, 0, 0},
			{-1, 2347, 3680, 0, 0},
			{-1, 2347, 3679, 0, 0},
			{-1, 2348, 3694, 0, 0},
			{-1, 2348, 3693, 0, 0},
			{-1, 2348, 3692, 0, 0},
			{-1, 2348, 3691, 0, 0},
			{-1, 2348, 3690, 0, 0},
			{-1, 2348, 3689, 0, 0},
			{-1, 2348, 3688, 0, 0},
			{-1, 2348, 3687, 0, 0},
			{-1, 2348, 3686, 0, 0},
			{-1, 2348, 3685, 0, 0},
			{-1, 2348, 3684, 0, 0},
			{-1, 2348, 3683, 0, 0},
			{-1, 2348, 3682, 0, 0},
			{-1, 2348, 3681, 0, 0},
			{-1, 2348, 3680, 0, 0},
			{-1, 2348, 3679, 0, 0},
			{-1, 2349, 3694, 0, 0},
			{-1, 2349, 3693, 0, 0},
			{-1, 2349, 3692, 0, 0},
			{-1, 2349, 3691, 0, 0},
			{-1, 2349, 3690, 0, 0},
			{-1, 2349, 3689, 0, 0},
			{-1, 2349, 3688, 0, 0},
			{-1, 2349, 3687, 0, 0},
			{-1, 2349, 3686, 0, 0},
			{-1, 2349, 3685, 0, 0},
			{-1, 2349, 3684, 0, 0},
			{-1, 2349, 3683, 0, 0},
			{-1, 2349, 3682, 0, 0},
			{-1, 2349, 3681, 0, 0},
			{-1, 2349, 3680, 0, 0},
			{-1, 2349, 3679, 0, 0},
			{-1, 2350, 3694, 0, 0},
			{-1, 2350, 3693, 0, 0},
			{-1, 2350, 3692, 0, 0},
			{-1, 2350, 3691, 0, 0},
			{-1, 2350, 3690, 0, 0},
			{-1, 2350, 3689, 0, 0},
			{-1, 2350, 3688, 0, 0},
			{-1, 2350, 3687, 0, 0},
			{-1, 2350, 3686, 0, 0},
			{-1, 2350, 3685, 0, 0},
			{-1, 2350, 3684, 0, 0},
			{-1, 2350, 3683, 0, 0},
			{-1, 2350, 3682, 0, 0},
			{-1, 2350, 3681, 0, 0},
			{-1, 2350, 3680, 0, 0},
			{-1, 2350, 3679, 0, 0},
			{-1, 2351, 3694, 0, 0},
			{-1, 2351, 3693, 0, 0},
			{-1, 2351, 3692, 0, 0},
			{-1, 2351, 3691, 0, 0},
			{-1, 2351, 3690, 0, 0},
			{-1, 2351, 3689, 0, 0},
			{-1, 2351, 3688, 0, 0},
			{-1, 2351, 3687, 0, 0},
			{-1, 2351, 3686, 0, 0},
			{-1, 2351, 3685, 0, 0},
			{-1, 2351, 3684, 0, 0},
			{-1, 2351, 3683, 0, 0},
			{-1, 2351, 3682, 0, 0},
			{-1, 2351, 3681, 0, 0},
			{-1, 2351, 3680, 0, 0},
			{-1, 2351, 3679, 0, 0},
			{-1, 2352, 3694, 0, 0},
			{-1, 2352, 3693, 0, 0},
			{-1, 2352, 3692, 0, 0},
			{-1, 2352, 3691, 0, 0},
			{-1, 2352, 3690, 0, 0},
			{-1, 2352, 3689, 0, 0},
			{-1, 2352, 3688, 0, 0},
			{-1, 2352, 3687, 0, 0},
			{-1, 2352, 3686, 0, 0},
			{-1, 2352, 3685, 0, 0},
			{-1, 2352, 3684, 0, 0},
			{-1, 2352, 3683, 0, 0},
			{-1, 2352, 3682, 0, 0},
			{-1, 2352, 3681, 0, 0},
			{-1, 2352, 3680, 0, 0},
			{-1, 2352, 3679, 0, 0},
			{-1, 2353, 3694, 0, 0},
			{-1, 2353, 3693, 0, 0},
			{-1, 2353, 3692, 0, 0},
			{-1, 2353, 3691, 0, 0},
			{-1, 2353, 3690, 0, 0},
			{-1, 2353, 3689, 0, 0},
			{-1, 2353, 3688, 0, 0},
			{-1, 2353, 3687, 0, 0},
			{-1, 2353, 3686, 0, 0},
			{-1, 2353, 3685, 0, 0},
			{-1, 2353, 3684, 0, 0},
			{-1, 2353, 3683, 0, 0},
			{-1, 2353, 3682, 0, 0},
			{-1, 2353, 3681, 0, 0},
			{-1, 2353, 3680, 0, 0},
			{-1, 2353, 3679, 0, 0},
			{-1, 2354, 3694, 0, 0},
			{-1, 2354, 3693, 0, 0},
			{-1, 2354, 3692, 0, 0},
			{-1, 2354, 3691, 0, 0},
			{-1, 2354, 3690, 0, 0},
			{-1, 2354, 3689, 0, 0},
			{-1, 2354, 3688, 0, 0},
			{-1, 2354, 3687, 0, 0},
			{-1, 2354, 3686, 0, 0},
			{-1, 2354, 3685, 0, 0},
			{-1, 2354, 3684, 0, 0},
			{-1, 2354, 3683, 0, 0},
			{-1, 2354, 3682, 0, 0},
			{-1, 2354, 3681, 0, 0},
			{-1, 2354, 3680, 0, 0},
			{-1, 2354, 3679, 0, 0},
			{-1, 2355, 3694, 0, 0},
			{-1, 2355, 3693, 0, 0},
			{-1, 2355, 3692, 0, 0},
			{-1, 2355, 3691, 0, 0},
			{-1, 2355, 3690, 0, 0},
			{-1, 2355, 3689, 0, 0},
			{-1, 2355, 3688, 0, 0},
			{-1, 2355, 3687, 0, 0},
			{-1, 2355, 3686, 0, 0},
			{-1, 2355, 3685, 0, 0},
			{-1, 2355, 3684, 0, 0},
			{-1, 2355, 3683, 0, 0},
			{-1, 2355, 3682, 0, 0},
			{-1, 2355, 3681, 0, 0},
			{-1, 2355, 3680, 0, 0},
			{-1, 2355, 3679, 0, 0},
			{-1, 2356, 3694, 0, 0},
			{-1, 2356, 3693, 0, 0},
			{-1, 2356, 3692, 0, 0},
			{-1, 2356, 3691, 0, 0},
			{-1, 2356, 3690, 0, 0},
			{-1, 2356, 3689, 0, 0},
			{-1, 2356, 3688, 0, 0},
			{-1, 2356, 3687, 0, 0},
			{-1, 2356, 3686, 0, 0},
			{-1, 2356, 3685, 0, 0},
			{-1, 2356, 3684, 0, 0},
			{-1, 2356, 3683, 0, 0},
			{-1, 2356, 3682, 0, 0},
			{-1, 2356, 3681, 0, 0},
			{-1, 2356, 3680, 0, 0},
			{-1, 2356, 3679, 0, 0},
			
			
			
			
			{26972, 2354, 3699, 0, 1}, //Bank Booth
			{26972, 2344, 3681, 0, 2}, //Bank Booth
			{47120, 2342, 3689, 0, 0}, //Bank Booth
			{1306, 2346, 3686, 0, 0}, //Bank Booth
			{1306, 2346, 3693, 0, 0}, //Bank Booth
			{1306, 2339, 3693, 0, 0}, //Bank Booth
			{1306, 2339, 3686, 0, 0}, //Bank Booth
			{ 10091 , 2353, 3703, 0, 2},
			{ 10089 , 2352, 3703, 0, 2},
			{ 14859 , 2352, 3684, 0, 0},
			{ 14859 , 2354, 3684, 0, 0},
			{ 14859 , 2356, 3684, 0, 0},
	};
	
	
	/**
	 * Contains
	 * @param ObjectId - The object ID to spawn
	 * @param absX - The X position of the object to spawn
	 * @param absY - The Y position of the object to spawn
	 * @param Z - The Z position of the object to spawn
	 * @param face - The position the object will face
	 */
	
	//Objects that are handled by the server on regionchange
	private static final int[][] CUSTOM_OBJECTS_SPAWNS = {
		{2274, 3652, 3488, 0, 0},
		/**Jail Start*/
		{ 12269, 3093, 3933, 0, 0},
		{ 1864, 3093, 3932, 0, 1},//Cell 1
		{ 1864, 3094, 3932, 0, 1},
		{ 1864, 3095, 3932, 0, 1},
		{ 1864, 3096, 3932, 0, 1},
		{ 1864, 3097, 3932, 0, 1},
		{ 1864, 3097, 3931, 0, 2},
		{ 1864, 3097, 3930, 0, 2},
		{ 1864, 3097, 3929, 0, 2},
		{ 1864, 3097, 3928, 0, 3},
		{ 1864, 3096, 3928, 0, 3},
		{ 1864, 3095, 3928, 0, 3},
		{ 1864, 3094, 3928, 0, 3},
		{ 1864, 3093, 3928, 0, 3},
		{ 1864, 3093, 3929, 0, 4},
		{ 1864, 3093, 3930, 0, 4},
		{ 1864, 3093, 3931, 0, 4},
		{ 1864, 3098, 3932, 0, 1},//Cell 2
		{ 1864, 3099, 3932, 0, 1},
		{ 1864, 3100, 3932, 0, 1},
		{ 1864, 3101, 3932, 0, 1},
		{ 1864, 3102, 3932, 0, 1},
		{ 1864, 3102, 3931, 0, 2},
		{ 1864, 3102, 3930, 0, 2},
		{ 1864, 3102, 3929, 0, 2},
		{ 1864, 3102, 3928, 0, 3},
		{ 1864, 3101, 3928, 0, 3},
		{ 1864, 3100, 3928, 0, 3},
		{ 1864, 3099, 3928, 0, 3},
		{ 1864, 3098, 3928, 0, 3},
		{ 1864, 3098, 3929, 0, 4},
		{ 1864, 3098, 3930, 0, 4},
		{ 1864, 3098, 3931, 0, 4},
		{ 1864, 3093, 3939, 0, 1},//Cell 3
		{ 1864, 3094, 3939, 0, 1},
		{ 1864, 3095, 3939, 0, 1},
		{ 1864, 3096, 3939, 0, 1},
		{ 1864, 3097, 3939, 0, 1},
		{ 1864, 3097, 3938, 0, 2},
		{ 1864, 3097, 3937, 0, 2},
		{ 1864, 3097, 3936, 0, 2},
		{ 1864, 3097, 3935, 0, 3},
		{ 1864, 3096, 3935, 0, 3},
		{ 1864, 3095, 3935, 0, 3},
		{ 1864, 3094, 3935, 0, 3},
		{ 1864, 3093, 3935, 0, 3},
		{ 1864, 3093, 3936, 0, 4},
		{ 1864, 3093, 3937, 0, 4},
		{ 1864, 3093, 3938, 0, 4},
		{ 1864, 3098, 3939, 0, 1},//Cell 4
		{ 1864, 3099, 3939, 0, 1},
		{ 1864, 3100, 3939, 0, 1},
		{ 1864, 3101, 3939, 0, 1},
		{ 1864, 3102, 3939, 0, 1},
		{ 1864, 3102, 3938, 0, 2},
		{ 1864, 3102, 3937, 0, 2},
		{ 1864, 3102, 3936, 0, 2},
		{ 1864, 3102, 3935, 0, 3},
		{ 1864, 3101, 3935, 0, 3},
		{ 1864, 3100, 3935, 0, 3},
		{ 1864, 3099, 3935, 0, 3},
		{ 1864, 3098, 3935, 0, 3},
		{ 1864, 3098, 3936, 0, 4},
		{ 1864, 3098, 3937, 0, 4},
		{ 1864, 3098, 3938, 0, 4},
		{ 1864, 3103, 3932, 0, 1},//Cell 5
		{ 1864, 3104, 3932, 0, 1},
		{ 1864, 3105, 3932, 0, 1},
		{ 1864, 3106, 3932, 0, 1},
		{ 1864, 3107, 3932, 0, 1},
		{ 1864, 3107, 3931, 0, 2},
		{ 1864, 3107, 3930, 0, 2},
		{ 1864, 3107, 3929, 0, 2},
		{ 1864, 3107, 3928, 0, 3},
		{ 1864, 3106, 3928, 0, 3},
		{ 1864, 3105, 3928, 0, 3},
		{ 1864, 3104, 3928, 0, 3},
		{ 1864, 3103, 3928, 0, 3},
		{ 1864, 3103, 3929, 0, 4},
		{ 1864, 3103, 3930, 0, 4},
		{ 1864, 3103, 3931, 0, 4},
		{ 1864, 3108, 3932, 0, 1},//Cell 6
		{ 1864, 3109, 3932, 0, 1},
		{ 1864, 3110, 3932, 0, 1},
		{ 1864, 3111, 3932, 0, 1},
		{ 1864, 3112, 3932, 0, 1},
		{ 1864, 3112, 3931, 0, 2},
		{ 1864, 3112, 3930, 0, 2},
		{ 1864, 3112, 3929, 0, 2},
		{ 1864, 3112, 3928, 0, 3},
		{ 1864, 3111, 3928, 0, 3},
		{ 1864, 3110, 3928, 0, 3},
		{ 1864, 3109, 3928, 0, 3},
		{ 1864, 3108, 3928, 0, 3},
		{ 1864, 3108, 3929, 0, 4},
		{ 1864, 3108, 3930, 0, 4},
		{ 1864, 3108, 3931, 0, 4},
		{ 1864, 3103, 3939, 0, 1},//Cell 7
		{ 1864, 3104, 3939, 0, 1},
		{ 1864, 3105, 3939, 0, 1},
		{ 1864, 3106, 3939, 0, 1},
		{ 1864, 3107, 3939, 0, 1},
		{ 1864, 3107, 3938, 0, 2},
		{ 1864, 3107, 3937, 0, 2},
		{ 1864, 3107, 3936, 0, 2},
		{ 1864, 3107, 3935, 0, 3},
		{ 1864, 3106, 3935, 0, 3},
		{ 1864, 3105, 3935, 0, 3},
		{ 1864, 3104, 3935, 0, 3},
		{ 1864, 3103, 3935, 0, 3},
		{ 1864, 3103, 3936, 0, 4},
		{ 1864, 3103, 3937, 0, 4},
		{ 1864, 3103, 3938, 0, 4},
		{ 1864, 3108, 3939, 0, 1},//Cell 8
		{ 1864, 3109, 3939, 0, 1},
		{ 1864, 3110, 3939, 0, 1},
		{ 1864, 3111, 3939, 0, 1},
		{ 1864, 3112, 3939, 0, 1},
		{ 1864, 3112, 3938, 0, 2},
		{ 1864, 3112, 3937, 0, 2},
		{ 1864, 3112, 3936, 0, 2},
		{ 1864, 3112, 3935, 0, 3},
		{ 1864, 3111, 3935, 0, 3},
		{ 1864, 3110, 3935, 0, 3},
		{ 1864, 3109, 3935, 0, 3},
		{ 1864, 3108, 3935, 0, 3},
		{ 1864, 3108, 3936, 0, 4},
		{ 1864, 3108, 3937, 0, 4},
		{ 1864, 3108, 3938, 0, 4},
		{ 1864, 3113, 3932, 0, 1},//Cell 9
		{ 1864, 3114, 3932, 0, 1},
		{ 1864, 3115, 3932, 0, 1},
		{ 1864, 3116, 3932, 0, 1},
		{ 1864, 3117, 3932, 0, 1},
		{ 1864, 3117, 3931, 0, 2},
		{ 1864, 3117, 3930, 0, 2},
		{ 1864, 3117, 3929, 0, 2},
		{ 1864, 3117, 3928, 0, 3},
		{ 1864, 3116, 3928, 0, 3},
		{ 1864, 3115, 3928, 0, 3},
		{ 1864, 3114, 3928, 0, 3},
		{ 1864, 3113, 3928, 0, 3},
		{ 1864, 3113, 3929, 0, 4},
		{ 1864, 3113, 3930, 0, 4},
		{ 1864, 3113, 3931, 0, 4},
		{ 1864, 3113, 3939, 0, 1},//Cell 10
		{ 1864, 3114, 3939, 0, 1},
		{ 1864, 3115, 3939, 0, 1},
		{ 1864, 3116, 3939, 0, 1},
		{ 1864, 3117, 3939, 0, 1},
		{ 1864, 3117, 3938, 0, 2},
		{ 1864, 3117, 3937, 0, 2},
		{ 1864, 3117, 3936, 0, 2},
		{ 1864, 3117, 3935, 0, 3},
		{ 1864, 3116, 3935, 0, 3},
		{ 1864, 3115, 3935, 0, 3},
		{ 1864, 3114, 3935, 0, 3},
		{ 1864, 3113, 3935, 0, 3},
		{ 1864, 3113, 3936, 0, 4},
		{ 1864, 3113, 3937, 0, 4},
		{ 1864, 3113, 3938, 0, 4},
		{ 2732, 3424, 2923, 0, 0},
		/**Home*/
		{-1, 2824, 3870, 0, 0}, //Deleted Weapon Rack
		{-1, 2822, 3854, 0, 0}, //Deleted Weapon Rack
		{-1, 2826, 3852, 0, 0}, //Deleted Weapon Rack
		{-1, 2826, 3851, 0, 0}, //Deleted Weapon Rack
		{-1, 2828, 3861, 0, 0}, //Deleted Weapon Rack
		{-1, 2828, 3856, 0, 0}, //Deleted Weapon Rack
		{-1, 2837, 3856, 0, 0}, //Deleted Weapon Rack
		{-1, 2837, 3861, 0, 0}, //Deleted Weapon Rack
		{-1, 2844, 3853, 0, 0}, //Deleted Weapon Rack
		{-1, 2830, 3866, 0, 0}, //Deleted Torch
		{2213, 2832, 3869, 0, 0}, //Bank Booth
		{2213, 2833, 3869, 0, 0}, //Bank Booth
		{2182, 2844, 3854, 0, 3}, //culinaromanser's Chest
		{172, 2839, 3861, 0, 1}, //Crystal Key Chect
		{2470, 2830, 3866, 0, 0}, //Members Portal
		{884, 2832, 3846, 0, 0}, //Well Of GoodWill
		{409, 2828, 3861, 0, 1}, //Pray Altar
		{411, 2828, 3856, 0, 1}, //Chaos Altar
		{412, 2837, 3856, 0, 3}, //Maigc Altar
		{11, 2837, 3861, 0, 3}, //Guthix Altar
		{11, 2829, 3869, 1, 0}, //Ladder
		{11, 2836, 3869, 1, 0}, //Ladder
		{881, 2839, 3865, 3, 3}, //Manhole
		{881, 2826, 3865, 3, 3}, //Manhole
		{44207, 2534, 4720, 0, 2}, //Stairs to home(from magebank)
		{6189, 2826, 3869, 0, 1}, //Furnace
		{6189, 2838, 3869, 0, 1}, //Furnace
		{4306, 2836, 3870, 0, 0}, //Anvil
		{4306, 2829, 3870, 0, 2}, //Anvil
		{609, 2823, 3870, 0, 0}, //WorkBench
		{609, 2841, 3870, 0, 0}, //WorkBench
		{2644, 2826, 3863, 0, 2}, //Spinner
		{2644, 2839, 3863, 0, 2}, //Spinner
		{12269, 2821, 3864, 0, 0}, //Range
		{12269, 2844, 3864, 0, 2}, //Range
		{874, 2822, 3863, 0, 1}, //Sink
		{874, 2842, 3863, 0, 3}, //Sink
		{13615, 2843, 3848, 1, 1}, //Varrock Portal
		{13616, 2843, 3850, 1, 1}, //Lumbridge Portal
		{13617, 2843, 3852, 1, 1}, //Falador Portal
		{13621, 2843, 3854, 1, 1}, //Entrana Portal
		{13618, 2843, 3862, 1, 1}, //Camelot Portal
		{13619, 2843, 3864, 1, 1}, //Ardougne Portal
		{13620, 2843, 3866, 1, 1}, //Yanielle Portal
		{13628, 2843, 3868, 1, 1}, //Taverley Portal
		{26972, 2832, 3860, 3, 2}, //GE Bank Booth
		{26972, 2833, 3860, 3, 2}, //GE Bank Booth
		{26972, 2833, 3857, 3, 0}, //GE Bank Booth
		{26972, 2832, 3857, 3, 0}, //GE Bank Booth
		{26972, 2834, 3859, 3, 3}, //GE Bank Booth
		{26972, 2834, 3858, 3, 3}, //GE Bank Booth
		{26972, 2831, 3858, 3, 1}, //GE Bank Booth
		{26972, 2831, 3859, 3, 1}, //GE Bank Booth
		{4875, 3095, 3860, 3, 0}, //Stall
		{4874, 3095, 3859, 3, 0}, //Stall
		{4876, 3095, 3858, 3, 0}, //Stall
		
		{4877, 3095, 3857, 3, 0}, //Stall
		{4878, 3095, 3856, 3, 0}, //Stall
		/**Well of goodwill Cave*/
		{31316, 2907, 10021, 0, 0},//Rope Bucket	
		{3192, 2825, 3860, 0, 2},//leaderboard
		{-1, 3090, 3503, 0, 2},
		{-1, 3084, 3509, 0, 2},
		{-1, 3084, 3510, 0, 2},
		{-1, 3084, 3512, 0, 2},
		{-1, 3083, 3507, 0, 2},
		{-1, 3080, 3513, 0, 2},
		{-1, 3079, 3513, 0, 2},
		{-1, 3078, 3513, 0, 2},
		{-1, 3077, 3513, 0, 2},
		{-1, 3077, 3512, 0, 2},
		{-1, 3076, 3512, 0, 2},
		{-1, 3079, 3513, 0, 2},
		{-1, 3076, 3511, 0, 2},
		{-1, 3076, 3510, 0, 2},
		{-1, 3076, 3509, 0, 2},
		{-1, 3077, 3577, 0, 2},
		{-1, 3077, 3507, 0, 2},
		{-1, 3079, 3507, 0, 2},
		{-1, 3078, 3510, 0, 2},
		{-1, 3081, 3510, 0, 2},
		{-1, 3080, 3510, 0, 2},
		/*{10660, 3084, 3502, 0, 2},
		{10665, 3087, 3502, 0, 2},
		{10681, 3085, 3502, 0, 2},*///christmas shit
		{6189, 3021, 9742, 0, 1},
		{2213, 2203, 5344, 0, 1},
		{4306, 3021, 9736, 0, 1},
	};
}
